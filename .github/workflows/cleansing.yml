name: Cleansing shared terraform state

run-name: Delete AWS S3 buckets and DynamoDB table on ${{ inputs.env }} environment

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - dev
          - prd

jobs:
  cleansing:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      DYNAMODB_LOCK_TABLE_NAME: ${{ vars.PROJECT_NAME }}-state-lock-table-${{ inputs.env }}
      S3_BUCKET_NAME: ${{ vars.PROJECT_NAME }}-state-${{ inputs.env }}
      S3_LOGS_BUCKET_NAME: ${{ vars.PROJECT_NAME }}-state-logs-${{ inputs.env }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Delete an AWS S3 bucket for terraform state
        run: |
          aws s3 rm s3://${{ env.S3_BUCKET_NAME }} --recursive --region ${{ env.AWS_REGION }}
          aws s3api delete-objects --bucket ${{ env.S3_BUCKET_NAME }} --region ${{ env.AWS_REGION }} --delete "$(aws s3api list-object-versions --bucket ${{ env.S3_BUCKET_NAME }} --region ${{ env.AWS_REGION }} --output=json --query='{Objects: Versions[].{Key:Key,VersionId:VersionId}}')"
          aws s3api delete-objects --bucket ${{ env.S3_BUCKET_NAME }} --region ${{ env.AWS_REGION }} --delete "$(aws s3api list-object-versions --bucket ${{ env.S3_BUCKET_NAME }} --region ${{ env.AWS_REGION }} --output=json --query='{Objects: DeleteMarkers[].{Key:Key,VersionId:VersionId}}')"
          aws s3api delete-bucket --bucket ${{ env.S3_BUCKET_NAME }} --region ${{ env.AWS_REGION }}
      
      - name: Delete an AWS S3 bucket for logs
        run: |
          aws s3 rm s3://${{ env.S3_LOGS_BUCKET_NAME }} --recursive --quiet --region ${{ env.AWS_REGION }}
          aws s3api delete-bucket --bucket ${{ env.S3_LOGS_BUCKET_NAME }} --region ${{ env.AWS_REGION }}

      - name: Delete an AWS DynamoDB table for lock management
        run: |
          aws dynamodb delete-table --table-name ${{ env.DYNAMODB_LOCK_TABLE_NAME }} --region ${{ env.AWS_REGION }}
